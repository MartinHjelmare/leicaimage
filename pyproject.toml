[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
authors = ["Martin Hjelmare <marhje52@gmail.com>"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries",
]
description = "Handle Leica Matrix Screener experiment images."
license = "MIT"
name = "leicaimage"
packages = [
  {include = "leicaimage", from = "src"},
]
readme = "README.md"
repository = "https://github.com/MartinHjelmare/leicaimage"
version = "0.4.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MartinHjelmare/leicaimage/issues"
"Changelog" = "https://github.com/MartinHjelmare/leicaimage/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
python-semantic-release = "^9.8.8"

[tool.ruff]
line-length = 88
lint.ignore = [
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]
lint.isort.force-sort-within-sections = true
lint.isort.known-first-party = ["leicaimage", "tests"]
lint.per-file-ignores."setup.py" = ["D100"]
lint.per-file-ignores."tests/**/*" = [
  "S101",
]
lint.select = [
  "B", # flake8-bugbear
  "D", # flake8-docstrings
  "C4", # flake8-comprehensions
  "S", # flake8-bandit
  "F", # pyflake
  "E", # pycodestyle
  "W", # pycodestyle
  "UP", # pyupgrade
  "I", # isort
  "RUF", # ruff specific
]
target-version = "py39"

[tool.pytest.ini_options]
addopts = """\
    -Wdefault
    --cov=leicaimage
    --cov-report=term-missing
    --cov-report=xml
    """
pythonpath = ["src"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "def __repr__",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
  'if __name__ == "__main__":',
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
exclude = [
  'setup.py',
]
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
allow_untyped_defs = true
module = "tests.*"

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
major_on_zero = false
tag_format = "{version}"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
  "src/leicaimage/__init__.py:__version__",
]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "^Bump.*",
  "Merge pull request .*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true
